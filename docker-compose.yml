version: '3.8'
services:
   classifiation_diabets:
       build:
         context: .
         args:
            ANSIBLE: ${ANSIBLE}
            LABA4_HOST: ${LABA4_HOST}
            LABA4_PORT: ${LABA4_PORT}
       command: bash -c "python3 src/train.py && python3 src/predict.py && python3 src/unit_tests/test_predicting.py && python3  src/unit_tests/test_training.py"
       ports:
           - 8000:8000
       image: nikitaromanoov/tobd_laba_4:latest
       environment:
          ANSIBLE: ${ANSIBLE}
          LABA4_HOST: ${LABA4_HOST}
          LABA4_PORT: ${LABA4_PORT}
          
          
   zookeeper:
       image: confluentinc/cp-zookeeper:7.3.2
       container_name: zookeeper
       environment:
           ZOOKEEPER_CLIENT_PORT: 2181        
   laba4:
       image: confluentinc/cp-kafka:7.3.2
       container_name: laba4
       ports:
           - "${LABA4_PORT}:${LABA4_PORT}"
       depends_on:
           - zookeeper
       environment:
           LABA4_HOST: ${LABA4_HOST}
           LABA4_PORT: ${LABA4_PORT}
           KAFKA_BROKER_ID: 1
           KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
           KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
           KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
           KAFKA_LISTENERS: INTERNAL://:${LABA4_PORT}
           KAFKA_ADVERTISED_LISTENERS: INTERNAL://${LABA4_HOST}:${LABA4_PORT}
           KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
          
   kafka-topics-generator:
       image: confluentinc/cp-kafka:7.3.2
       container_name: kafka-topics-generator
       depends_on:
           - laba4
       command: >
           bash -c
             "sleep 5s &&
             kafka-topics --create --topic=kafka-predictions --if-not-exists --bootstrap-server=${LABA4_HOST}:${LABA4_PORT}"
   kafka-consumer:
       image: confluentinc/cp-kafka:7.3.2
       container_name: kafka-consumer
       command: >
           bash -c
             "kafka-console-consumer --bootstrap-server ${LABA4_HOST}:${LABA4_PORT} --topic kafka-pred --from-beginning"
